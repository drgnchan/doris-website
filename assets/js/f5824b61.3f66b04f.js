"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([[89688],{3905:(t,e,a)=>{a.d(e,{Zo:()=>p,kt:()=>k});var n=a(67294);function l(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function i(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function r(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?i(Object(a),!0).forEach((function(e){l(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function o(t,e){if(null==t)return{};var a,n,l=function(t,e){if(null==t)return{};var a,n,l={},i=Object.keys(t);for(n=0;n<i.length;n++)a=i[n],e.indexOf(a)>=0||(l[a]=t[a]);return l}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(n=0;n<i.length;n++)a=i[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(l[a]=t[a])}return l}var s=n.createContext({}),m=function(t){var e=n.useContext(s),a=e;return t&&(a="function"==typeof t?t(e):r(r({},e),t)),a},p=function(t){var e=m(t.components);return n.createElement(s.Provider,{value:e},t.children)},u="mdxType",c={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},d=n.forwardRef((function(t,e){var a=t.components,l=t.mdxType,i=t.originalType,s=t.parentName,p=o(t,["components","mdxType","originalType","parentName"]),u=m(a),d=l,k=u["".concat(s,".").concat(d)]||u[d]||c[d]||i;return a?n.createElement(k,r(r({ref:e},p),{},{components:a})):n.createElement(k,r({ref:e},p))}));function k(t,e){var a=arguments,l=e&&e.mdxType;if("string"==typeof t||l){var i=a.length,r=new Array(i);r[0]=d;var o={};for(var s in e)hasOwnProperty.call(e,s)&&(o[s]=e[s]);o.originalType=t,o[u]="string"==typeof t?t:l,r[1]=o;for(var m=2;m<i;m++)r[m]=a[m];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},1298:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>s,contentTitle:()=>r,default:()=>c,frontMatter:()=>i,metadata:()=>o,toc:()=>m});var n=a(87462),l=(a(67294),a(3905));const i={title:"Statistics",language:"en"},r=void 0,o={unversionedId:"query-acceleration/statistics",id:"version-2.0/query-acceleration/statistics",title:"Statistics",description:"\x3c!--",source:"@site/versioned_docs/version-2.0/query-acceleration/statistics.md",sourceDirName:"query-acceleration",slug:"/query-acceleration/statistics",permalink:"/docs/query-acceleration/statistics",draft:!1,tags:[],version:"2.0",frontMatter:{title:"Statistics",language:"en"},sidebar:"docs",previous:{title:"Materialized view",permalink:"/docs/query-acceleration/materialized-view"},next:{title:"Bucket Shuffle Join",permalink:"/docs/query-acceleration/join-optimization/bucket-shuffle-join"}},s={},m=[{value:"Introduction to statistics information",id:"introduction-to-statistics-information",level:2},{value:"Introduction to Histograms",id:"introduction-to-histograms",level:2},{value:"Collect statistics",id:"collect-statistics",level:2},{value:"Manual collection",id:"manual-collection",level:3},{value:"Full collection",id:"full-collection",level:4},{value:"Collect column statistic",id:"collect-column-statistic",level:5},{value:"Collect histogram information",id:"collect-histogram-information",level:5},{value:"Incremental collection",id:"incremental-collection",level:4},{value:"Sampling collection",id:"sampling-collection",level:4},{value:"Synchronous collection",id:"synchronous-collection",level:4},{value:"Automatic collection",id:"automatic-collection",level:3},{value:"Periodic collection",id:"periodic-collection",level:4},{value:"Automatic collection",id:"automatic-collection-1",level:4},{value:"Manage job",id:"manage-job",level:3},{value:"View statistics job",id:"view-statistics-job",level:4},{value:"Terminate the statistics job",id:"terminate-the-statistics-job",level:4},{value:"View statistics",id:"view-statistics",level:2},{value:"Table statistics",id:"table-statistics",level:3},{value:"View Column Statistics",id:"view-column-statistics",level:3},{value:"View column histogram information",id:"view-column-histogram-information",level:3},{value:"Modify the statistics",id:"modify-the-statistics",level:2},{value:"Delete statistics",id:"delete-statistics",level:2},{value:"ANALYZE configuration item",id:"analyze-configuration-item",level:2}],p={toc:m},u="wrapper";function c(t){let{components:e,...a}=t;return(0,l.kt)(u,(0,n.Z)({},p,a,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"statistics"},"Statistics"),(0,l.kt)("h2",{id:"introduction-to-statistics-information"},"Introduction to statistics information"),(0,l.kt)("p",null,"In SQL databases, the quality of the query optimizer has a significant impact on system performance. The optimizer needs to estimate the query cost according to the statistics information, especially in the equal-value query scenario, it is very important to estimate the cardinality accurately, which can help the optimizer to select the optimal query plan, thereby improving the query performance."),(0,l.kt)("p",null,"When executing a query, an insufficiently optimized execution plan and an optimized execution plan can result in a large difference in execution time, which can be several times greater. Therefore, it is very important for the SQL query optimizer to collect and analyze statistics so that the optimizer can accurately evaluate the cost of different execution plans and select the best one."),(0,l.kt)("p",null,"The Doris query optimizer uses statistics to determine the most efficient execution plan for a query. Statistics maintained by Doris include table-level statistics and column-level statistics."),(0,l.kt)("p",null,"Table Statistics:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Information"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"row_count")),(0,l.kt)("td",{parentName:"tr",align:"left"},"Number of rows in the table")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"data_size")),(0,l.kt)("td",{parentName:"tr",align:"left"},"Table size (in bytes)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"update_rows")),(0,l.kt)("td",{parentName:"tr",align:"left"},"The number of rows updated after collecting statistics information")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"healthy")),(0,l.kt)("td",{parentName:"tr",align:"left"},"The health of the table")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"update_time")),(0,l.kt)("td",{parentName:"tr",align:"left"},"The time of the latest update")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"last_analyze_time")),(0,l.kt)("td",{parentName:"tr",align:"left"},"The time when the last statistics information was collected")))),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Table Health: Indicates the health of the table statistics. When it ",(0,l.kt)("inlineCode",{parentName:"p"},"update_rows")," is greater than or equal to ",(0,l.kt)("inlineCode",{parentName:"p"},"row_count"),", the health degree is 0; when it ",(0,l.kt)("inlineCode",{parentName:"p"},"update_rows")," is less than ",(0,l.kt)("inlineCode",{parentName:"p"},"row_count"),", the health degree is ",(0,l.kt)("inlineCode",{parentName:"p"},"100 * (1 - update_rows/ row_count)"),".")),(0,l.kt)("p",null,"Column Statistics:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Information"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"row_count")),(0,l.kt)("td",{parentName:"tr",align:"left"},"Total number of rows for the column")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"data_size")),(0,l.kt)("td",{parentName:"tr",align:"left"},"Total degree of the column in bytes")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"avg_size_byte")),(0,l.kt)("td",{parentName:"tr",align:"left"},"Average degree of the column in bytes")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"ndv")),(0,l.kt)("td",{parentName:"tr",align:"left"},"Column num distinct value")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"min")),(0,l.kt)("td",{parentName:"tr",align:"left"},"Column Minimum")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"max")),(0,l.kt)("td",{parentName:"tr",align:"left"},"Column Max Value")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"null_count")),(0,l.kt)("td",{parentName:"tr",align:"left"},"Number of columns null")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"histogram")),(0,l.kt)("td",{parentName:"tr",align:"left"},"Column Histogram")))),(0,l.kt)("p",null,"Next, we will briefly introduce the histogram and other data structures, as well as the collection and maintenance of statistics information in detail."),(0,l.kt)("h2",{id:"introduction-to-histograms"},"Introduction to Histograms"),(0,l.kt)("p",null,"A histogram is a tool used to describe the distribution of data. It divides the data into several intervals (buckets) according to the size, and uses simple statistics to represent the characteristics of the data in each interval. Is an important statistic in a database that describes the distribution of data in a column. The most typical application scenario of histogram is to help the optimizer choose the optimal execution plan by estimating the selectivity of query predicates."),(0,l.kt)("p",null,"In Doris, an equi-height Histogram is built for each table-specific column. The histogram comprises a series of buckets, wherein the statistics of each bucket comprises the upper and lower bounds of the bucket, the number of elements contained in the bucket, the number of all elements in the previous bucket, and the number of different values in the bucket. For details, please refer to the SQL function ",(0,l.kt)("inlineCode",{parentName:"p"},"histogram")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"hist")," its instructions."),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Using the bucket method of contour histogram, the sum of numerical frequency in each bucket should be close to the total number of ",(0,l.kt)("inlineCode",{parentName:"p"},"1/N")," rows. However, if the principle of equal height is strictly followed, some values will fall on the boundary of the bucket, resulting in the same value appearing in two different buckets. This situation can interfere with the estimation of the selection rate. Therefore, in the implementation, Doris modifies the bucketting method of the contour histogram: if adding a value to a bucket causes the frequency of data in the bucket to exceed the total number ",(0,l.kt)("inlineCode",{parentName:"p"},"1/N")," of rows, the value is put into the bucket or the next bucket, depending on which situation is closer ",(0,l.kt)("inlineCode",{parentName:"p"},"1/N"),".")),(0,l.kt)("h2",{id:"collect-statistics"},"Collect statistics"),(0,l.kt)("h3",{id:"manual-collection"},"Manual collection"),(0,l.kt)("p",null,"The user triggers a manual collection job through a statement ",(0,l.kt)("inlineCode",{parentName:"p"},"ANALYZE")," to collect statistics for the specified table or column based on the supplied parameters."),(0,l.kt)("p",null,"Column statistics collection syntax:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-SQL"},'ANALYZE TABLE | DATABASE table_name | db_name\n    [ (column_name [, ...]) ]    [ [ WITH SYNC ] [ WITH INCREMENTAL ] [ WITH SAMPLE PERCENT | ROWS ] [ WITH PERIOD ] [WITH HISTOGRAM]]    [ PROPERTIES ("key" = "value", ...) ];\n')),(0,l.kt)("p",null,"Explanation:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Table_name: The target table for the specified. It can be a ",(0,l.kt)("inlineCode",{parentName:"li"},"db_name.table_name")," form."),(0,l.kt)("li",{parentName:"ul"},"Column_name: The specified target column. Must be ",(0,l.kt)("inlineCode",{parentName:"li"},"table_name")," a column that exists in. Multiple column names are separated by commas."),(0,l.kt)("li",{parentName:"ul"},"Sync: Synchronizes the collection of statistics. Return after collection. If not specified, it will be executed asynchronously and the job ID will be returned."),(0,l.kt)("li",{parentName:"ul"},"Incremental: Incrementally gather statistics. Incremental collection of histogram statistics is not supported."),(0,l.kt)("li",{parentName:"ul"},"Period: Collect statistics periodically. The unit is seconds, and when specified, the appropriate statistics are collected periodically."),(0,l.kt)("li",{parentName:"ul"},"Sample percent | rows: Sample collection statistics. You can specify a sampling ratio or the number of rows to sample."),(0,l.kt)("li",{parentName:"ul"},"Buckets: Specifies the maximum number of buckets generated when collecting histogram statistics. The default is 128 when not specified."),(0,l.kt)("li",{parentName:"ul"},"Properties: used to configure statistics job. Currently, only the following configuration items are supported",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},'"sync" = "true"'),": Equivalent ",(0,l.kt)("inlineCode",{parentName:"li"},"with sync")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},'"incremental" = "true"'),": Equivalent ",(0,l.kt)("inlineCode",{parentName:"li"},"with incremental")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},'"sample.percent" = "50"'),": Equivalent ",(0,l.kt)("inlineCode",{parentName:"li"},"with percent 50")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},'"sample.rows" = "1000"'),": Equivalent ",(0,l.kt)("inlineCode",{parentName:"li"},"with rows 1000")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},'"num.buckets" = "10"'),": Equivalent ",(0,l.kt)("inlineCode",{parentName:"li"},"with buckets 10")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},'"period.seconds" = "300"'),": Equivalent ",(0,l.kt)("inlineCode",{parentName:"li"},"with period 300"))))),(0,l.kt)("p",null,"Next, we will use a table ",(0,l.kt)("inlineCode",{parentName:"p"},"stats_test.example_tbl")," as an example to explain how to collect statistics. ",(0,l.kt)("inlineCode",{parentName:"p"},"stats_test.example_tbl")," The structure is as follows:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Column Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"AggregationType"),(0,l.kt)("th",{parentName:"tr",align:null},"Comment"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"user_id"),(0,l.kt)("td",{parentName:"tr",align:null},"LARGEINT"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"User ID")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"imp_date"),(0,l.kt)("td",{parentName:"tr",align:null},"DATEV2"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"Data import date")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"city"),(0,l.kt)("td",{parentName:"tr",align:null},"VARCHAR(20)"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"User city")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"age"),(0,l.kt)("td",{parentName:"tr",align:null},"SMALLINT"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"User age")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"sex"),(0,l.kt)("td",{parentName:"tr",align:null},"TINYINT"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"User gender")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"last_visit_date"),(0,l.kt)("td",{parentName:"tr",align:null},"DATETIME"),(0,l.kt)("td",{parentName:"tr",align:null},"REPLACE"),(0,l.kt)("td",{parentName:"tr",align:null},"User last visit time")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"cost"),(0,l.kt)("td",{parentName:"tr",align:null},"BIGINT"),(0,l.kt)("td",{parentName:"tr",align:null},"SUM"),(0,l.kt)("td",{parentName:"tr",align:null},"User total cost")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"max_dwell_time"),(0,l.kt)("td",{parentName:"tr",align:null},"INT"),(0,l.kt)("td",{parentName:"tr",align:null},"MAX"),(0,l.kt)("td",{parentName:"tr",align:null},"User maximum dwell time")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"min_dwell_time"),(0,l.kt)("td",{parentName:"tr",align:null},"INT"),(0,l.kt)("td",{parentName:"tr",align:null},"MIN"),(0,l.kt)("td",{parentName:"tr",align:null},"User minimum dwell time")))),(0,l.kt)("p",null,"Connect Doris:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-Bash"},'mysql -uroot -P9030 -h192.168.xxx.xxx```\n\nCreate a data table:\n\n```SQL\nmysql> CREATE DATABASE IF NOT EXISTS stats_test;\n\nmysql> CREATE TABLE IF NOT EXISTS stats_test.example_tbl (\n        `user_id` LARGEINT NOT NULL,        `date` DATEV2 NOT NULL,        `city` VARCHAR(20),        `age` SMALLINT,        `sex` TINYINT,        `last_visit_date` DATETIME REPLACE,        `cost` BIGINT SUM,        `max_dwell_time` INT MAX,        `min_dwell_time` INT MIN    ) ENGINE=OLAP    AGGREGATE KEY(`user_id`, `date`, `city`, `age`, `sex`)    PARTITION BY LIST(`date`)    (        PARTITION `p_201701` VALUES IN ("2017-10-01"),        PARTITION `p_201702` VALUES IN ("2017-10-02"),        PARTITION `p_201703` VALUES IN ("2017-10-03")    )    DISTRIBUTED BY HASH(`user_id`) BUCKETS 1    PROPERTIES (        "replication_num" = "1"    );\n')),(0,l.kt)("p",null,"Import data:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-SQL"},'mysql> INSERT INTO stats_test.example_tbl (`user_id`, `date`, `city`, `age`,\n                                    `sex`, `last_visit_date`, `cost`,                                    `max_dwell_time`, `min_dwell_time`)    VALUES (10000, "2017-10-01", "Beijing", 20, 0, "2017-10-01 07:00:00", 15, 2, 2),        (10000, "2017-10-01", "Beijing", 20, 0, "2017-10-01 06:00:00", 20, 10, 10),        (10001, "2017-10-01", "Beijing", 30, 1, "2017-10-01 17:05:45", 2, 22, 22),        (10002, "2017-10-02", "Shanghai", 20, 1, "2017-10-02 12:59:12", 200, 5, 5),        (10003, "2017-10-02", "Guangzhou", 32, 0, "2017-10-02 11:20:00", 30, 11, 11),        (10004, "2017-10-01", "Shenzhen", 35, 0, "2017-10-01 10:00:15", 100, 3, 3),        (10004, "2017-10-03", "Shenzhen", 35, 0, "2017-10-03 10:20:22", 11, 6, 6);\n')),(0,l.kt)("p",null,"To view data results:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-SQL"},"mysql> SELECT * FROM stats_test.example_tbl;\n+---------+------------+-----------+------+------+---------------------+------+----------------+----------------+\n| user_id | date       | city      | age  | sex  | last_visit_date     | cost | max_dwell_time | min_dwell_time |\n+---------+------------+-----------+------+------+---------------------+------+----------------+----------------+\n| 10004   | 2017-10-03 | Shenzhen  |   35 |    0 | 2017-10-03 10:20:22 |   11 |              6 |              6 |\n| 10000   | 2017-10-01 | Beijing   |   20 |    0 | 2017-10-01 06:00:00 |   35 |             10 |              2 |\n| 10001   | 2017-10-01 | Beijing   |   30 |    1 | 2017-10-01 17:05:45 |    2 |             22 |             22 |\n| 10004   | 2017-10-01 | Shenzhen  |   35 |    0 | 2017-10-01 10:00:15 |  100 |              3 |              3 |\n| 10002   | 2017-10-02 | Shanghai  |   20 |    1 | 2017-10-02 12:59:12 |  200 |              5 |              5 |\n| 10003   | 2017-10-02 | Guangzhou |   32 |    0 | 2017-10-02 11:20:00 |   30 |             11 |             11 |\n+---------+------------+-----------+------+------+---------------------+------+----------------+----------------+\n")),(0,l.kt)("p",null,"For the convenience of description, column statistics information is hereinafter referred to as statistics information, which stores the number of rows, the maximum value, the minimum value, the number of NULL values, and the like of a column; and a column histogram is referred to as histogram statistics information."),(0,l.kt)("h4",{id:"full-collection"},"Full collection"),(0,l.kt)("h5",{id:"collect-column-statistic"},"Collect column statistic"),(0,l.kt)("p",null,"Column statistics mainly include the number of rows, the maximum value, the minimum value, and the number of NULL values of a column, which are collected through ",(0,l.kt)("inlineCode",{parentName:"p"},"ANALYZE TABLE")," statements."),(0,l.kt)("p",null,"When executing SQL statements, the optimizer will, in most cases, only use statistics for some of the columns (for example, ",(0,l.kt)("inlineCode",{parentName:"p"},"WHERE")," the columns that appear in the, ",(0,l.kt)("inlineCode",{parentName:"p"},"JOIN"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"ORDER BY"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"GROUP BY")," clauses). If a table has many columns, collecting statistics for all columns can be expensive. To reduce overhead, you can collect statistics for specific columns only for use by the optimizer."),(0,l.kt)("p",null,"Example:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Collect ",(0,l.kt)("inlineCode",{parentName:"li"},"example_tbl")," statistics for all columns of a table, using the following syntax:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-SQL"},"mysql> ANALYZE TABLE stats_test.example_tbl;\n+--------+\n| job_id |\n+--------+\n| 51730  |\n+--------+\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Collect ",(0,l.kt)("inlineCode",{parentName:"li"},"example_tbl")," statistics for table ",(0,l.kt)("inlineCode",{parentName:"li"},"city")," ",(0,l.kt)("inlineCode",{parentName:"li"},"age")," ",(0,l.kt)("inlineCode",{parentName:"li"},"sex")," columns, using the following syntax:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-SQL"},"mysql> ANALYZE TABLE stats_test.example_tbl(city, age, sex);\n+--------+\n| job_id |\n+--------+\n| 51808  |\n+--------+\n")),(0,l.kt)("h5",{id:"collect-histogram-information"},"Collect histogram information"),(0,l.kt)("p",null,"Column histogram information is used to describe the distribution of columns. It divides the data into several intervals (buckets) according to the size, and uses simple statistics to represent the characteristics of the data in each interval. Collected by ",(0,l.kt)("inlineCode",{parentName:"p"},"ANALYZE TABLE")," statement fit ",(0,l.kt)("inlineCode",{parentName:"p"},"UPDATE HISTOGRAM"),"."),(0,l.kt)("p",null,"Columns can be specified to collect their histogram information in the same way that normal statistics are collected. Collecting histogram information takes longer than normal statistics, so to reduce overhead, we can just collect histogram information for specific columns for the optimizer to use."),(0,l.kt)("p",null,"Example:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Collects ",(0,l.kt)("inlineCode",{parentName:"li"},"example_tbl")," histograms for all columns of a table, using the following syntax:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-SQL"},"mysql> ANALYZE TABLE stats_test.example_tbl UPDATE HISTOGRAM;\n+--------+\n| job_id |\n+--------+\n| 51838  |\n+--------+\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Collect ",(0,l.kt)("inlineCode",{parentName:"li"},"example_tbl")," histograms for table ",(0,l.kt)("inlineCode",{parentName:"li"},"city")," ",(0,l.kt)("inlineCode",{parentName:"li"},"age")," ",(0,l.kt)("inlineCode",{parentName:"li"},"sex")," columns, using the following syntax:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-SQL"},"mysql> ANALYZE TABLE stats_test.example_tbl(city, age, sex) UPDATE HISTOGRAM;\n+--------+\n| job_id |\n+--------+\n| 51889  |\n+--------+\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Collect ",(0,l.kt)("inlineCode",{parentName:"li"},"example_tbl")," histograms for all columns of the table and set the maximum number of buckets, using the following syntax:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-SQL"},'-- use with buckets\nmysql> ANALYZE TABLE stats_test.example_tbl UPDATE HISTOGRAM WITH BUCKETS 2;\n+--------+\n| job_id |\n+--------+\n| 52018  |\n+--------+\n\n-- configure num.buckets\nmysql> ANALYZE TABLE stats_test.example_tbl UPDATE HISTOGRAM PROPERTIES("num.buckets" = "2");\n+--------+\n| job_id |\n+--------+\n| 52069  |\n+--------+\n')),(0,l.kt)("h4",{id:"incremental-collection"},"Incremental collection"),(0,l.kt)("p",null,"For partitioned tables, incremental collection can be used to improve the speed of statistics collection if partitions are added or deleted after full collection."),(0,l.kt)("p",null,"When using incremental collection, the system automatically checks for new or deleted partitions. There are three situations:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"For newly added partitions, the statistics of the newly added partitions are collected and merged/summarized with the historical statistics."),(0,l.kt)("li",{parentName:"ul"},"Refresh historical statistics for deleted partitions."),(0,l.kt)("li",{parentName:"ul"},"No new/deleted partition. Do not do anything.")),(0,l.kt)("p",null,"Incremental collection is appropriate for tables with monotonic non-decreasing columns such as time columns as partitions, or tables where historical partition data is not updated."),(0,l.kt)("p",null,"Notice\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Histogram statistics do not support incremental collection."),(0,l.kt)("li",{parentName:"ul"},"When using incremental collection, you must ensure that the statistics information of table inventory is available (that is, other historical partition data does not change). Otherwise, the statistics information will be inaccurate.")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Incrementally collect ",(0,l.kt)("inlineCode",{parentName:"li"},"example_tbl")," statistics for a table, using the following syntax:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-SQL"},'-- use with incremental\nmysql> ANALYZE TABLE stats_test.example_tbl WITH INCREMENTAL;\n+--------+\n| job_id |\n+--------+\n| 51910  |\n+--------+\n\n-- configure incremental\nmysql> ANALYZE TABLE stats_test.example_tbl PROPERTIES("incremental" = "true");\n+--------+\n| job_id |\n+--------+\n| 51910  |\n+--------+\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Incrementally collect ",(0,l.kt)("inlineCode",{parentName:"li"},"example_tbl")," statistics for table ",(0,l.kt)("inlineCode",{parentName:"li"},"city")," ",(0,l.kt)("inlineCode",{parentName:"li"},"age")," ",(0,l.kt)("inlineCode",{parentName:"li"},"sex")," columns, using the following syntax:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-SQL"},"mysql> ANALYZE TABLE stats_test.example_tbl(city, age, sex) WITH INCREMENTAL;\n+--------+\n| job_id |\n+--------+\n| 51988  |\n+--------+\n")),(0,l.kt)("h4",{id:"sampling-collection"},"Sampling collection"),(0,l.kt)("p",null,"When the amount of table data is large, the system may take time to collect statistics. You can use sampling collection to speed up the collection of statistics. Specify the proportion of sampling or the number of rows to be sampled according to the actual situation."),(0,l.kt)("p",null,"Example:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Sampling collects ",(0,l.kt)("inlineCode",{parentName:"li"},"example_tbl")," statistics from a table, using the following syntax:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-SQL"},'-- use with sample rows\nmysql> ANALYZE TABLE stats_test.example_tbl WITH SAMPLE ROWS 5;\n+--------+\n| job_id |\n+--------+\n| 52120  |\n+--------+\n\n-- use with sample percent\nmysql> ANALYZE TABLE stats_test.example_tbl WITH SAMPLE PERCENT 50;\n+--------+\n| job_id |\n+--------+\n| 52201  |\n+--------+\n\n-- configure sample.row\nmysql> ANALYZE TABLE stats_test.example_tbl PROPERTIES("sample.rows" = "5");\n+--------+\n| job_id |\n+--------+\n| 52279  |\n+--------+\n\n-- configure sample.percent\nmysql> ANALYZE TABLE stats_test.example_tbl PROPERTIES("sample.percent" = "50");\n+--------+\n| job_id |\n+--------+\n| 52282  |\n+--------+\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Samples collect ",(0,l.kt)("inlineCode",{parentName:"li"},"example_tbl")," histogram information for a table, similar to normal statistics, using the following syntax:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-SQL"},"mysql> ANALYZE TABLE stats_test.example_tbl UPDATE HISTOGRAM WITH SAMPLE ROWS 5;\n+--------+\n| job_id |\n+--------+\n| 52357  |\n+--------+\n")),(0,l.kt)("h4",{id:"synchronous-collection"},"Synchronous collection"),(0,l.kt)("p",null,"Generally, after executing ",(0,l.kt)("inlineCode",{parentName:"p"},"ANALYZE")," the statement, the system will start an asynchronous job to collect statistics and return the statistics job ID immediately. If you want to wait for the statistics collection to finish and return, you can use synchronous collection."),(0,l.kt)("p",null,"Example:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Sampling collects ",(0,l.kt)("inlineCode",{parentName:"li"},"example_tbl")," statistics from a table, using the following syntax:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-SQL"},'-- use with sync\nmysql> ANALYZE TABLE stats_test.example_tbl WITH SYNC;\n\n-- configure sync\nmysql> ANALYZE TABLE stats_test.example_tbl PROPERTIES("sync" = "true");\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Samples collect ",(0,l.kt)("inlineCode",{parentName:"li"},"example_tbl")," histogram information for a table, similar to normal statistics, using the following syntax:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-SQL"},"mysql> ANALYZE TABLE stats_test.example_tbl UPDATE HISTOGRAM WITH SYNC;\n")),(0,l.kt)("h3",{id:"automatic-collection"},"Automatic collection"),(0,l.kt)("p",null,"Automatic collection means that the system will automatically generate a job to collect statistics when the user specifies ",(0,l.kt)("inlineCode",{parentName:"p"},"PERIOD")," ",(0,l.kt)("inlineCode",{parentName:"p"},"AUTO")," keywords or performs related configuration when executing ",(0,l.kt)("inlineCode",{parentName:"p"},"ANALYZE")," a statement."),(0,l.kt)("h4",{id:"periodic-collection"},"Periodic collection"),(0,l.kt)("p",null,"Periodic collection means that the corresponding statistics of a table are re-collected at a certain time interval."),(0,l.kt)("p",null,"Example:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Collect ",(0,l.kt)("inlineCode",{parentName:"li"},"example_tbl")," statistics for a table periodically (every other day), using the following syntax:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-SQL"},'-- use with period\nmysql> ANALYZE TABLE stats_test.example_tbl WITH PERIOD 86400;\n+--------+\n| job_id |\n+--------+\n| 52409  |\n+--------+\n\n-- configure period.seconds\nmysql> ANALYZE TABLE stats_test.example_tbl PROPERTIES("period.seconds" = "86400");\n+--------+\n| job_id |\n+--------+\n| 52535  |\n+--------+\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Collects ",(0,l.kt)("inlineCode",{parentName:"li"},"example_tbl")," histogram information for a table periodically (every other day), similar to normal statistics, using the following syntax:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-SQL"},"mysql> ANALYZE TABLE stats_test.example_tbl UPDATE HISTOGRAM WITH PERIOD 86400;\n+--------+\n| job_id |\n+--------+\n| 52684  |\n+--------+\n")),(0,l.kt)("h4",{id:"automatic-collection-1"},"Automatic collection"),(0,l.kt)("p",null,'Statistics can be "invalidated" when tables are changed, which can cause the optimizer to select the wrong execution plan.'),(0,l.kt)("p",null,"Table statistics may become invalid due to the following causes:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"New field: The new field has no statistics"),(0,l.kt)("li",{parentName:"ul"},"Field change: Original statistics are unavailable"),(0,l.kt)("li",{parentName:"ul"},"Added zone: The new zone has no statistics"),(0,l.kt)("li",{parentName:"ul"},"Zone change: The original statistics are invalid"),(0,l.kt)("li",{parentName:"ul"},"data changes (insert data delete data | | change data) : the statistical information is error")),(0,l.kt)("p",null,"The main operations involved include:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"update: updates the data"),(0,l.kt)("li",{parentName:"ul"},"delete: deletes data"),(0,l.kt)("li",{parentName:"ul"},"drop: deletes a partition"),(0,l.kt)("li",{parentName:"ul"},"load: import data and add partitions"),(0,l.kt)("li",{parentName:"ul"},"insert: inserts data and adds partitions"),(0,l.kt)("li",{parentName:"ul"},"alter: Field change, partition change, or new partition")),(0,l.kt)("p",null,"Database, table, partition, field deletion, internal will automatically clear these invalid statistics. Adjusting the column order and changing the column type do not affect."),(0,l.kt)("p",null,"The system determines whether to collect statistics again based on the health of the table (as defined above). By setting the health threshold, the system collects statistics about the table again when the health is lower than a certain value. To put it simply, if statistics are collected on a table and the data of a partition becomes more or less, or a partition is added or deleted, the statistics may be automatically collected. After the statistics are collected again, the statistics and health of the table are updated. "),(0,l.kt)("p",null,"Currently, only tables that are configured by the user to automatically collect statistics will be collected, and statistics will not be automatically collected for other tables."),(0,l.kt)("p",null,"Example:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Automatically analysis statistics for the 'example_tbl' table using the following syntax:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-SQL"},'-- use with auto\nmysql> ANALYZE TABLE stats_test.example_tbl WITH AUTO;\n+--------+\n| job_id |\n+--------+\n| 52539  |\n+--------+\n\n-- configure automatic\nmysql> ANALYZE TABLE stats_test.example_tbl PROPERTIES("automatic" = "true");\n+--------+\n| job_id |\n+--------+\n| 52565  |\n+--------+\n')),(0,l.kt)("h3",{id:"manage-job"},"Manage job"),(0,l.kt)("h4",{id:"view-statistics-job"},"View statistics job"),(0,l.kt)("p",null,"Collect information for the job by ",(0,l.kt)("inlineCode",{parentName:"p"},"SHOW ANALYZE")," viewing the statistics."),(0,l.kt)("p",null,"The syntax is as follows:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-SQL"},'SHOW ANALYZE [ table_name | job_id ]\n    [ WHERE [ STATE = [ "PENDING" | "RUNNING" | "FINISHED" | "FAILED" ] ] ];\n')),(0,l.kt)("p",null,"Explanation:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Table_name: The table name. After it is specified, the statistics job information corresponding to the table can be viewed. It can be a ",(0,l.kt)("inlineCode",{parentName:"li"},"db_name.table_name")," form. Return all statistics job information if not specified."),(0,l.kt)("li",{parentName:"ul"},"Job_ID: The statistics job ID ",(0,l.kt)("inlineCode",{parentName:"li"},"ANALYZE"),". The value returned when the asynchronous collection of statistics is performed. Return all statistics job information if not specified.")),(0,l.kt)("p",null,"Currently ",(0,l.kt)("inlineCode",{parentName:"p"},"SHOW ANALYZE"),", 11 columns are output, as follows:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Column Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"job_id")),(0,l.kt)("td",{parentName:"tr",align:"left"},"statistics job ID")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"catalog_name")),(0,l.kt)("td",{parentName:"tr",align:"left"},"Catalog name")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"db_name")),(0,l.kt)("td",{parentName:"tr",align:"left"},"Database name")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"tbl_name")),(0,l.kt)("td",{parentName:"tr",align:"left"},"Variable name")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"col_name")),(0,l.kt)("td",{parentName:"tr",align:"left"},"Column name")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"job_type")),(0,l.kt)("td",{parentName:"tr",align:"left"},"job type")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"analysis_type")),(0,l.kt)("td",{parentName:"tr",align:"left"},"statistics type")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"message")),(0,l.kt)("td",{parentName:"tr",align:"left"},"job information")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"last_exec_time_in_ms")),(0,l.kt)("td",{parentName:"tr",align:"left"},"Last execution time")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"state")),(0,l.kt)("td",{parentName:"tr",align:"left"},"job state")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"schedule_type")),(0,l.kt)("td",{parentName:"tr",align:"left"},"Scheduling method")))),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"In the system, the statistics job contains multiple subtasks, each of which collects a separate column of statistics.")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"View statistics job information with ID ",(0,l.kt)("inlineCode",{parentName:"li"},"20038"),", using the following syntax:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-SQL"},"mysql> SHOW ANALYZE 20038 \n+--------+--------------+----------------------+----------+-----------------------+----------+---------------+---------+----------------------+----------+---------------+\n| job_id | catalog_name | db_name              | tbl_name | col_name              | job_type | analysis_type | message | last_exec_time_in_ms | state    | schedule_type |\n+--------+--------------+----------------------+----------+-----------------------+----------+---------------+---------+----------------------+----------+---------------+\n| 20038  | internal     | default_cluster:test | t3       | [col4,col2,col3,col1] | MANUAL   | FUNDAMENTALS  |         | 2023-06-01 17:22:15  | FINISHED | ONCE          |\n+--------+--------------+----------------------+----------+-----------------------+----------+---------------+---------+----------------------+----------+---------------+\n\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"mysql> show analyze task status  20038 ;\n+---------+----------+---------+----------------------+----------+\n| task_id | col_name | message | last_exec_time_in_ms | state    |\n+---------+----------+---------+----------------------+----------+\n| 20039   | col4     |         | 2023-06-01 17:22:15  | FINISHED |\n| 20040   | col2     |         | 2023-06-01 17:22:15  | FINISHED |\n| 20041   | col3     |         | 2023-06-01 17:22:15  | FINISHED |\n| 20042   | col1     |         | 2023-06-01 17:22:15  | FINISHED |\n+---------+----------+---------+----------------------+----------+\n\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"View all statistics job information, and return the first 3 pieces of information in descending order of the last completion time, using the following syntax:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-SQL"},'mysql> SHOW ANALYZE WHERE state = "FINISHED" ORDER BY last_exec_time_in_ms DESC LIMIT 3;\n+--------+--------------+----------------------------+-------------+-----------------+----------+---------------+---------+----------------------+----------+---------------+\n| job_id | catalog_name | db_name                    | tbl_name    | col_name        | job_type | analysis_type | message | last_exec_time_in_ms | state    | schedule_type |\n+--------+--------------+----------------------------+-------------+-----------------+----------+---------------+---------+----------------------+----------+---------------+\n| 68603  | internal     | default_cluster:stats_test | example_tbl | age             | MANUAL   | COLUMN        |         | 2023-05-05 17:53:27  | FINISHED | ONCE          |\n| 68603  | internal     | default_cluster:stats_test | example_tbl | sex             | MANUAL   | COLUMN        |         | 2023-05-05 17:53:26  | FINISHED | ONCE          |\n| 68603  | internal     | default_cluster:stats_test | example_tbl | last_visit_date | MANUAL   | COLUMN        |         | 2023-05-05 17:53:26  | FINISHED | ONCE          |\n+--------+--------------+----------------------------+-------------+-----------------+----------+---------------+---------+----------------------+----------+---------------+\n')),(0,l.kt)("h4",{id:"terminate-the-statistics-job"},"Terminate the statistics job"),(0,l.kt)("p",null,"To ",(0,l.kt)("inlineCode",{parentName:"p"},"KILL ANALYZE")," terminate a running statistics job."),(0,l.kt)("p",null,"The syntax is as follows:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-SQL"},"KILL ANALYZE job_id;\n")),(0,l.kt)("p",null,"Explanation:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Job_ID: Statistics job ID. The value returned when an asynchronous collection of statistics is performed ",(0,l.kt)("inlineCode",{parentName:"li"},"ANALYZE"),", which can also be obtained by a ",(0,l.kt)("inlineCode",{parentName:"li"},"SHOW ANALYZE")," statement.")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Stop the statistics job whose ID is the 52357.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-SQL"},"mysql> KILL ANALYZE 52357;\n")),(0,l.kt)("h2",{id:"view-statistics"},"View statistics"),(0,l.kt)("h3",{id:"table-statistics"},"Table statistics"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Temporarily unavailable.")),(0,l.kt)("p",null,"To ",(0,l.kt)("inlineCode",{parentName:"p"},"SHOW TABLE STATS")," view information such as the total number of rows in the table and the health of the statistics."),(0,l.kt)("p",null,"The syntax is as follows:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-SQL"},"SHOW TABLE STATS table_name [ PARTITION (partition_name) ];\n")),(0,l.kt)("p",null,"Explanation:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Table_name: The table to which the data is imported. It can be a ",(0,l.kt)("inlineCode",{parentName:"li"},"db_name.table_name")," form."),(0,l.kt)("li",{parentName:"ul"},"Partition_name: The specified target partition. Must be ",(0,l.kt)("inlineCode",{parentName:"li"},"table_name")," a partition that exists in. Only one partition can be specified.")),(0,l.kt)("p",null,"Currently ",(0,l.kt)("inlineCode",{parentName:"p"},"SHOW TABLE STATS"),", 6 columns are output, as follows:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Column Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"row_count"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Number of rows")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"update_rows"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Number of rows updated")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"data_size"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Data size. Unit: bytes")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"healthy"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Health")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"update_time"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Update time")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"last_analyze_time"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Time when statistics information was last collected")))),(0,l.kt)("p",null,"Example:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"To view ",(0,l.kt)("inlineCode",{parentName:"li"},"example_tbl")," statistics for a table, use the following syntax:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-SQL"},"mysql> SHOW TABLE STATS stats_test.example_tbl;\n+-----------+-------------+---------+-----------+---------------------+---------------------+\n| row_count | update_rows | healthy | data_size | update_time         | last_analyze_time   |\n+-----------+-------------+---------+-----------+---------------------+---------------------+\n| 8         | 0           | 100     | 6999      | 2023-04-08 15:40:47 | 2023-04-08 17:43:28 |\n+-----------+-------------+---------+-----------+---------------------+---------------------+\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"To view ",(0,l.kt)("inlineCode",{parentName:"li"},"example_tbl")," statistics for a table ",(0,l.kt)("inlineCode",{parentName:"li"},"p_201701")," partition, use the following syntax:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-SQL"},"mysql> SHOW TABLE STATS stats_test.example_tbl PARTITION (p_201701);\n+-----------+-------------+---------+-----------+---------------------+---------------------+\n| row_count | update_rows | healthy | data_size | update_time         | last_analyze_time   |\n+-----------+-------------+---------+-----------+---------------------+---------------------+\n| 4         | 0           | 100     | 2805      | 2023-04-08 11:48:02 | 2023-04-08 17:43:27 |\n+-----------+-------------+---------+-----------+---------------------+---------------------+\n")),(0,l.kt)("h3",{id:"view-column-statistics"},"View Column Statistics"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"SHOW COLUMN STATS")," To view information such as the number of different values and ",(0,l.kt)("inlineCode",{parentName:"p"},"NULL")," the number of columns."),(0,l.kt)("p",null,"The syntax is as follows:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-SQL"},"SHOW COLUMN [cached] STATS table_name [ (column_name [, ...]) ] [ PARTITION (partition_name) ];\n")),(0,l.kt)("p",null,"Explanation:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"cached: Cached means to show statistics in current FE memory cache."),(0,l.kt)("li",{parentName:"ul"},"Table_name: The target table for collecting statistics. It can be a ",(0,l.kt)("inlineCode",{parentName:"li"},"db_name.table_name")," form."),(0,l.kt)("li",{parentName:"ul"},"Column_name: Specified destination column. ",(0,l.kt)("inlineCode",{parentName:"li"},"table_name")," Must be a column that exists in. Multiple column names are separated by commas."),(0,l.kt)("li",{parentName:"ul"},"Partition_name: The specified target partition ",(0,l.kt)("inlineCode",{parentName:"li"},"table_name")," must exist in. Only one partition can be specified.")),(0,l.kt)("p",null,"Currently ",(0,l.kt)("inlineCode",{parentName:"p"},"SHOW COLUMN STATS"),", 10 columns are output, as follows:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Column Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Explain"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"column_name")),(0,l.kt)("td",{parentName:"tr",align:"left"},"Column name")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"count")),(0,l.kt)("td",{parentName:"tr",align:"left"},"Total number of rows for the column")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"ndv")),(0,l.kt)("td",{parentName:"tr",align:"left"},"Number of distinct values")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"num_null")),(0,l.kt)("td",{parentName:"tr",align:"left"},"The number of null values")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"data_size")),(0,l.kt)("td",{parentName:"tr",align:"left"},"Total degree of the column in bytes")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"avg_size_byte")),(0,l.kt)("td",{parentName:"tr",align:"left"},"Average degree of the column in bytes")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"min")),(0,l.kt)("td",{parentName:"tr",align:"left"},"Column Minimum")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"max")),(0,l.kt)("td",{parentName:"tr",align:"left"},"Column Max Value")))),(0,l.kt)("p",null,"Example:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"To view ",(0,l.kt)("inlineCode",{parentName:"li"},"example_tbl")," statistics for all columns of a table, use the following syntax:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-SQL"},"mysql> SHOW COLUMN STATS stats_test.example_tbl;\n+-----------------+-------+------+----------+-------------------+-------------------+-----------------------+-----------------------+\n| column_name     | count | ndv  | num_null | data_size         | avg_size_byte     | min                   | max                   |\n+-----------------+-------+------+----------+-------------------+-------------------+-----------------------+-----------------------+\n| date            | 6.0   | 3.0  | 0.0      | 28.0              | 4.0               | '2017-10-01'          | '2017-10-03'          |\n| cost            | 6.0   | 6.0  | 0.0      | 56.0              | 8.0               | 2                     | 200                   |\n| min_dwell_time  | 6.0   | 6.0  | 0.0      | 28.0              | 4.0               | 2                     | 22                    |\n| city            | 6.0   | 4.0  | 0.0      | 54.0              | 7.0               | 'Beijing'             | 'Shenzhen'            |\n| user_id         | 6.0   | 5.0  | 0.0      | 112.0             | 16.0              | 10000                 | 10004                 |\n| sex             | 6.0   | 2.0  | 0.0      | 7.0               | 1.0               | 0                     | 1                     |\n| max_dwell_time  | 6.0   | 6.0  | 0.0      | 28.0              | 4.0               | 3                     | 22                    |\n| last_visit_date | 6.0   | 6.0  | 0.0      | 112.0             | 16.0              | '2017-10-01 06:00:00' | '2017-10-03 10:20:22' |\n| age             | 6.0   | 4.0  | 0.0      | 14.0              | 2.0               | 20                    | 35                    |\n+-----------------+-------+------+----------+-------------------+-------------------+-----------------------+-----------------------+\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"To view ",(0,l.kt)("inlineCode",{parentName:"li"},"example_tbl")," statistics for a table ",(0,l.kt)("inlineCode",{parentName:"li"},"p_201701")," partition, use the following syntax:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-SQL"},"mysql> SHOW COLUMN STATS stats_test.example_tbl PARTITION (p_201701);\n+-----------------+-------+------+----------+--------------------+-------------------+-----------------------+-----------------------+\n| column_name     | count | ndv  | num_null | data_size          | avg_size_byte     | min                   | max                   |\n+-----------------+-------+------+----------+--------------------+-------------------+-----------------------+-----------------------+\n| date            | 3.0   | 1.0  | 0.0      | 16.0               | 4.0               | '2017-10-01'          | '2017-10-01'          |\n| cost            | 3.0   | 3.0  | 0.0      | 32.0               | 8.0               | 2                     | 100                   |\n| min_dwell_time  | 3.0   | 3.0  | 0.0      | 16.0               | 4.0               | 2                     | 22                    |\n| city            | 3.0   | 2.0  | 0.0      | 29.0               | 7.0               | 'Beijing'             | 'Shenzhen'            |\n| user_id         | 3.0   | 3.0  | 0.0      | 64.0               | 16.0              | 10000                 | 10004                 |\n| sex             | 3.0   | 2.0  | 0.0      | 4.0                | 1.0               | 0                     | 1                     |\n| max_dwell_time  | 3.0   | 3.0  | 0.0      | 16.0               | 4.0               | 3                     | 22                    |\n| last_visit_date | 3.0   | 3.0  | 0.0      | 64.0               | 16.0              | '2017-10-01 06:00:00' | '2017-10-01 17:05:45' |\n| age             | 3.0   | 3.0  | 0.0      | 8.0                | 2.0               | 20                    | 35                    |\n+-----------------+-------+------+----------+--------------------+-------------------+-----------------------+-----------------------+\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"To view ",(0,l.kt)("inlineCode",{parentName:"li"},"example_tbl")," statistics for a table ",(0,l.kt)("inlineCode",{parentName:"li"},"city")," ",(0,l.kt)("inlineCode",{parentName:"li"},"age")," ",(0,l.kt)("inlineCode",{parentName:"li"},"sex")," column, use the following syntax:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-SQL"},"mysql> SHOW COLUMN STATS stats_test.example_tbl(city, age, sex);\n+-------------+-------+------+----------+-------------------+-------------------+-----------+------------+\n| column_name | count | ndv  | num_null | data_size         | avg_size_byte     | min       | max        |\n+-------------+-------+------+----------+-------------------+-------------------+-----------+------------+\n| city        | 6.0   | 4.0  | 0.0      | 54.0              | 7.0               | 'Beijing' | 'Shenzhen' |\n| sex         | 6.0   | 2.0  | 0.0      | 7.0               | 1.0               | 0         | 1          |\n| age         | 6.0   | 4.0  | 0.0      | 14.0              | 2.0               | 20        | 35         |\n+-------------+-------+------+----------+-------------------+-------------------+-----------+------------+\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"To view ",(0,l.kt)("inlineCode",{parentName:"li"},"example_tbl")," statistics for a table ",(0,l.kt)("inlineCode",{parentName:"li"},"p_201701")," partition ",(0,l.kt)("inlineCode",{parentName:"li"},"city")," ",(0,l.kt)("inlineCode",{parentName:"li"},"age")," ",(0,l.kt)("inlineCode",{parentName:"li"},"sex")," column, use the following syntax:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-SQL"},"mysql> SHOW COLUMN STATS stats_test.example_tbl(city, age, sex) PARTITION (p_201701);\n+-------------+-------+------+----------+--------------------+-------------------+-----------+------------+\n| column_name | count | ndv  | num_null | data_size          | avg_size_byte     | min       | max        |\n+-------------+-------+------+----------+--------------------+-------------------+-----------+------------+\n| city        | 3.0   | 2.0  | 0.0      | 29.0               | 7.0               | 'Beijing' | 'Shenzhen' |\n| sex         | 3.0   | 2.0  | 0.0      | 4.0                | 1.0               | 0         | 1          |\n| age         | 3.0   | 3.0  | 0.0      | 8.0                | 2.0               | 20        | 35         |\n+-------------+-------+------+----------+--------------------+-------------------+-----------+------------+\n")),(0,l.kt)("h3",{id:"view-column-histogram-information"},"View column histogram information"),(0,l.kt)("p",null,"To ",(0,l.kt)("inlineCode",{parentName:"p"},"SHOW COLUMN HISTOGRAM")," view the information for each bucket of the histogram."),(0,l.kt)("p",null,"The syntax is as follows:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-SQL"},"SHOW COLUMN HISTOGRAM table_name [ (column_name [, ...]) ];\n")),(0,l.kt)("p",null,"Explanation:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Table_name: The table to which the data is imported. It can be a ",(0,l.kt)("inlineCode",{parentName:"li"},"db_name.table_name")," form."),(0,l.kt)("li",{parentName:"ul"},"Column_name: Specified destination column. ",(0,l.kt)("inlineCode",{parentName:"li"},"table_name")," Must be a column that exists in. Multiple column names are separated by commas.")),(0,l.kt)("p",null,"Currently ",(0,l.kt)("inlineCode",{parentName:"p"},"SHOW COLUMN HISTOGRAM"),", 5 columns are output, and each bucket contains 5 attributes, as follows:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Column Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Explain"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"column_name")),(0,l.kt)("td",{parentName:"tr",align:"left"},"Column name")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"data_type")),(0,l.kt)("td",{parentName:"tr",align:"left"},"The data type of the column")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"sample_rate")),(0,l.kt)("td",{parentName:"tr",align:"left"},"Proportion is adopted. The default is 1 for full collection")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"num_buckets")),(0,l.kt)("td",{parentName:"tr",align:"left"},"Number of buckets included")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"buckets")),(0,l.kt)("td",{parentName:"tr",align:"left"},"Details of the bucket (Json format)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"lower")),(0,l.kt)("td",{parentName:"tr",align:"left"},"The lower bound of the barrel")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"upper")),(0,l.kt)("td",{parentName:"tr",align:"left"},"The upper bound of the bucket")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"count")),(0,l.kt)("td",{parentName:"tr",align:"left"},"Number of elements contained in the bucket")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"pre_sum")),(0,l.kt)("td",{parentName:"tr",align:"left"},"Number of all elements in the previous bucket")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"ndv")),(0,l.kt)("td",{parentName:"tr",align:"left"},"Number of distinct values in the bucket")))),(0,l.kt)("p",null,"Example:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"To view ",(0,l.kt)("inlineCode",{parentName:"li"},"example_tbl")," histogram information for all columns of a table, use the following syntax:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-SQL"},'mysql> SHOW COLUMN HISTOGRAM stats_test.example_tbl;\n+-----------------+-------------+-------------+-------------+---------------------------------------------------------------------------------------------------------------+\n| column_name     | data_type   | sample_rate | num_buckets | buckets                                                                                                       |\n+-----------------+-------------+-------------+-------------+---------------------------------------------------------------------------------------------------------------+\n| date            | DATE        | 1.0         | 1           | [{"lower_expr":"2017-10-01","upper_expr":"2017-10-03","count":6.0,"pre_sum":0.0,"ndv":3.0}]                   |\n| cost            | BIGINT      | 1.0         | 1           | [{"lower_expr":"2","upper_expr":"200","count":6.0,"pre_sum":0.0,"ndv":6.0}]                                   |\n| min_dwell_time  | INT         | 1.0         | 1           | [{"lower_expr":"2","upper_expr":"22","count":6.0,"pre_sum":0.0,"ndv":6.0}]                                    |\n| city            | VARCHAR(20) | 1.0         | 1           | [{"lower_expr":"Shanghai","upper_expr":"Shenzhen","count":6.0,"pre_sum":0.0,"ndv":4.0}]                       |\n| user_id         | LARGEINT    | 1.0         | 1           | [{"lower_expr":"10000","upper_expr":"10004","count":6.0,"pre_sum":0.0,"ndv":5.0}]                             |\n| sex             | TINYINT     | 1.0         | 1           | [{"lower_expr":"0","upper_expr":"1","count":6.0,"pre_sum":0.0,"ndv":2.0}]                                     |\n| max_dwell_time  | INT         | 1.0         | 1           | [{"lower_expr":"3","upper_expr":"22","count":6.0,"pre_sum":0.0,"ndv":6.0}]                                    |\n| last_visit_date | DATETIME    | 1.0         | 1           | [{"lower_expr":"2017-10-01 06:00:00","upper_expr":"2017-10-03 10:20:22","count":6.0,"pre_sum":0.0,"ndv":6.0}] |\n| age             | SMALLINT    | 1.0         | 1           | [{"lower_expr":"20","upper_expr":"35","count":6.0,"pre_sum":0.0,"ndv":4.0}]                                   |\n+-----------------+-------------+-------------+-------------+---------------------------------------------------------------------------------------------------------------+\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"To view ",(0,l.kt)("inlineCode",{parentName:"li"},"example_tbl")," histogram information for a table ",(0,l.kt)("inlineCode",{parentName:"li"},"city")," ",(0,l.kt)("inlineCode",{parentName:"li"},"age")," ",(0,l.kt)("inlineCode",{parentName:"li"},"sex")," column, use the following syntax:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-SQL"},'mysql> SHOW COLUMN HISTOGRAM stats_test.example_tbl(city, age, sex);\n+-------------+-------------+-------------+-------------+----------------------------------------------------------------------------------------+\n| column_name | data_type   | sample_rate | num_buckets | buckets                                                                                |\n+-------------+-------------+-------------+-------------+----------------------------------------------------------------------------------------+\n| city        | VARCHAR(20) | 1.0         | 1           | [{"lower_expr":"Shanghai","upper_expr":"Shenzhen","count":6.0,"pre_sum":0.0,"ndv":4.0}]|\n| sex         | TINYINT     | 1.0         | 1           | [{"lower_expr":"0","upper_expr":"1","count":6.0,"pre_sum":0.0,"ndv":2.0}]              |\n| age         | SMALLINT    | 1.0         | 1           | [{"lower_expr":"20","upper_expr":"35","count":6.0,"pre_sum":0.0,"ndv":4.0}]            |\n+-------------+-------------+-------------+-------------+----------------------------------------------------------------------------------------+\n')),(0,l.kt)("p",null,"Buckets description:"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Buckets for each column are returned in JSON format. Buckets are arranged from small to large. Each Bucket contains the upper and lower bounds, the number of elements, the NDV of elements, and the number of elements of all previous buckets. Where the number of elements in a column (row ",(0,l.kt)("em",{parentName:"p"}," count) = the last bucket element number (count) + the number of elements in all previous buckets (pre ")," sum). The number of rows for the following columns is 17.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-JSON"},'[\n    {        "lower_expr": 2,\n        "upper_expr": 7,\n        "count": 6,\n        "pre_sum": 0,\n        "ndv": 6\n    },\n    {\n        "lower_expr": 10,\n        "upper_expr": 20,\n        "count": 11,\n        "pre_sum": 6,\n        "ndv": 11\n    }\n]\n')),(0,l.kt)("h2",{id:"modify-the-statistics"},"Modify the statistics"),(0,l.kt)("p",null,"Users can modify the statistics information through statements ",(0,l.kt)("inlineCode",{parentName:"p"},"ALTER"),", and modify the corresponding statistics information of the column according to the provided parameters."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-SQL"},"ALTER TABLE table_name MODIFY COLUMN column_name SET STATS ('stat_name' = 'stat_value', ...) [ PARTITION (partition_name) ];\n")),(0,l.kt)("p",null,"Explanation:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Table_name: The table to which the statistics are dropped. It can be a ",(0,l.kt)("inlineCode",{parentName:"li"},"db_name.table_name")," form."),(0,l.kt)("li",{parentName:"ul"},"Column_name: Specified target column. ",(0,l.kt)("inlineCode",{parentName:"li"},"table_name")," Must be a column that exists in. Statistics can only be modified one column at a time."),(0,l.kt)("li",{parentName:"ul"},"Stat ",(0,l.kt)("em",{parentName:"li"}," name and stat ")," value: The corresponding stat name and the value of the stat info. Multiple stats are comma separated. Statistics that can be modified include ",(0,l.kt)("inlineCode",{parentName:"li"},"row_count"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"ndv"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"num_nulls")," ",(0,l.kt)("inlineCode",{parentName:"li"},"min_value")," ",(0,l.kt)("inlineCode",{parentName:"li"},"max_value"),", and ",(0,l.kt)("inlineCode",{parentName:"li"},"data_size"),"."),(0,l.kt)("li",{parentName:"ul"},"Partition_name: specifies the target partition. Must be a partition existing in ",(0,l.kt)("inlineCode",{parentName:"li"},"table_name"),". Multiple partitions are separated by commas.")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"To modify ",(0,l.kt)("inlineCode",{parentName:"li"},"example_tbl")," table ",(0,l.kt)("inlineCode",{parentName:"li"},"age")," column ",(0,l.kt)("inlineCode",{parentName:"li"},"row_count")," statistics, use the following syntax:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-SQL"},"mysql> ALTER TABLE stats_test.example_tbl MODIFY COLUMN age SET STATS ('row_count'='6001215');\nmysql> SHOW COLUMN STATS stats_test.example_tbl(age);\n+-------------+-----------+------+----------+-----------+---------------+------+------+\n| column_name | count     | ndv  | num_null | data_size | avg_size_byte | min  | max  |\n+-------------+-----------+------+----------+-----------+---------------+------+------+\n| age         | 6001215.0 | 0.0  | 0.0      | 0.0       | 0.0           | N/A  | N/A  |\n+-------------+-----------+------+----------+-----------+---------------+------+------+\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Modify ",(0,l.kt)("inlineCode",{parentName:"li"},"example_tbl")," table ",(0,l.kt)("inlineCode",{parentName:"li"},"age")," columns ",(0,l.kt)("inlineCode",{parentName:"li"},"row_count"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"num_nulls"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"data_size")," statistics, using the following syntax:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-SQL"},"mysql> ALTER TABLE stats_test.example_tbl MODIFY COLUMN age SET STATS ('row_count'='6001215', 'num_nulls'='2023', 'data_size'='600121522');\nmysql> SHOW COLUMN STATS stats_test.example_tbl(age);\n+-------------+-----------+------+----------+-----------+---------------+------+------+\n| column_name | count     | ndv  | num_null | data_size | avg_size_byte | min  | max  |\n+-------------+-----------+------+----------+-----------+---------------+------+------+\n| age         | 6001215.0 | 0.0  | 2023.0   | 600121522 | 0.0           | N/A  | N/A  |\n+-------------+-----------+------+----------+-----------+---------------+------+------+\n")),(0,l.kt)("h2",{id:"delete-statistics"},"Delete statistics"),(0,l.kt)("p",null,"The user deletes the statistics for the specified table, partition, or column based on the supplied parameters through the delete statistics statement ",(0,l.kt)("inlineCode",{parentName:"p"},"DROP"),". Both column statistics and column histogram information are deleted."),(0,l.kt)("p",null,"Grammar"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-SQL"},"DROP [ EXPIRED ] STATS [ table_name [ (column_name [, ...]) ] ];\n")),(0,l.kt)("p",null,"Explanation:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Table_name: The table to which you want to delete the statistics. It can be a ",(0,l.kt)("inlineCode",{parentName:"li"},"db_name.table_name")," form."),(0,l.kt)("li",{parentName:"ul"},"Column_name: The specified target column. Must be ",(0,l.kt)("inlineCode",{parentName:"li"},"table_name")," a column that exists in. Multiple column names are separated by commas."),(0,l.kt)("li",{parentName:"ul"},"Expired: statistics cleanup. Table cannot be specified. Invalid statistics and out-of-date statistics jobs information in the system will be deleted.")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Clean up statistics, using the following syntax:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-SQL"},"mysql> DROP EXPIRED STATS;\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"To delete ",(0,l.kt)("inlineCode",{parentName:"li"},"example_tbl")," statistics for a table, use the following syntax:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-SQL"},"mysql> DROP STATS stats_test.example_tbl;\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"To delete ",(0,l.kt)("inlineCode",{parentName:"li"},"example_tbl")," statistics for a table ",(0,l.kt)("inlineCode",{parentName:"li"},"city"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"age")," ",(0,l.kt)("inlineCode",{parentName:"li"},"sex")," column, use the following syntax:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-SQL"},"mysql> DROP STATS stats_test.example_tbl(city, age, sex);\n")),(0,l.kt)("h2",{id:"analyze-configuration-item"},"ANALYZE configuration item"),(0,l.kt)("p",null,"To be added."))}c.isMDXComponent=!0}}]);