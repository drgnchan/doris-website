"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([[36685],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>m});var n=a(67294);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var i=n.createContext({}),d=function(e){var t=n.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},c=function(e){var t=d(e.components);return n.createElement(i.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},b=n.forwardRef((function(e,t){var a=e.components,l=e.mdxType,r=e.originalType,i=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),p=d(a),b=l,m=p["".concat(i,".").concat(b)]||p[b]||u[b]||r;return a?n.createElement(m,s(s({ref:t},c),{},{components:a})):n.createElement(m,s({ref:t},c))}));function m(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=a.length,s=new Array(r);s[0]=b;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o[p]="string"==typeof e?e:l,s[1]=o;for(var d=2;d<r;d++)s[d]=a[d];return n.createElement.apply(null,s)}return n.createElement.apply(null,a)}b.displayName="MDXCreateElement"},43782:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>d});var n=a(87462),l=(a(67294),a(3905));const r={title:"Mysql to Doris",language:"en"},s=void 0,o={unversionedId:"ecosystem/mysql-to-doris",id:"version-2.0/ecosystem/mysql-to-doris",title:"Mysql to Doris",description:"\x3c!--",source:"@site/versioned_docs/version-2.0/ecosystem/mysql-to-doris.md",sourceDirName:"ecosystem",slug:"/ecosystem/mysql-to-doris",permalink:"/docs/ecosystem/mysql-to-doris",draft:!1,tags:[],version:"2.0",frontMatter:{title:"Mysql to Doris",language:"en"},sidebar:"docs",previous:{title:"Kyuubi",permalink:"/docs/ecosystem/kyuubi"},next:{title:"Logstash Doris Output Plugin",permalink:"/docs/ecosystem/logstash"}},i={},d=[{value:"Directory Structure",id:"directory-structure",level:2},{value:"configurations",id:"configurations",level:2},{value:"env.conf",id:"envconf",level:3},{value:"mysql_tables",id:"mysql_tables",level:3},{value:"doris_tables",id:"doris_tables",level:3},{value:"doris_external_tables",id:"doris_external_tables",level:3},{value:"How to use",id:"how-to-use",level:2},{value:"1. Create doris external table",id:"1-create-doris-external-table",level:3},{value:"2. Create doris olap table",id:"2-create-doris-olap-table",level:3},{value:"3. Create doris olap table and sync data from odbc external table",id:"3-create-doris-olap-table-and-sync-data-from-odbc-external-table",level:3},{value:"Sync result check",id:"sync-result-check",level:4},{value:"Drop external table",id:"drop-external-table",level:4},{value:"4. Create doris external table and sync schema change automatically",id:"4-create-doris-external-table-and-sync-schema-change-automatically",level:3},{value:"Process by specifying the database",id:"process-by-specifying-the-database",level:3}],c={toc:d},p="wrapper";function u(e){let{components:t,...a}=e;return(0,l.kt)(p,(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"mysql-to-doris"},"Mysql to Doris"),(0,l.kt)("p",null,"This is an easy-to-use tool to help mysql users on using doris with odbc external table creation, olap table creation and data sync."),(0,l.kt)("p",null,"mysql to doris code ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/apache/doris/tree/master/extension/mysql_to_doris"},"here")),(0,l.kt)("h2",{id:"directory-structure"},"Directory Structure"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"\u251c\u2500\u2500 bin\n\u2502   \u2514\u2500\u2500 run.sh\n\u251c\u2500\u2500 conf\n\u2502   \u251c\u2500\u2500 doris_external_tables\n\u2502   \u251c\u2500\u2500 doris_tables\n\u2502   \u251c\u2500\u2500 env.conf\n\u2502   \u2514\u2500\u2500 mysql_tables\n\u2514\u2500\u2500 lib\n    \u251c\u2500\u2500 jdbc\n    \u2502   \u251c\u2500\u2500 create_jdbc_catalog.sh\n    \u2502   \u2514\u2500\u2500 sync_to_doris.sh\n    \u251c\u2500\u2500 e_auto.sh\n    \u251c\u2500\u2500 e_mysql_to_doris.sh\n    \u251c\u2500\u2500 get_tables.sh\n    \u251c\u2500\u2500 mysql_to_doris.sh\n    \u251c\u2500\u2500 mysql_type_convert.sh\n    \u251c\u2500\u2500 sync_check.sh\n    \u2514\u2500\u2500 sync_to_doris.sh\n")),(0,l.kt)("h2",{id:"configurations"},"configurations"),(0,l.kt)("p",null,"All configuration files are in the conf directory."),(0,l.kt)("h3",{id:"envconf"},"env.conf"),(0,l.kt)("p",null,"Fill in your doris and mysql information here."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"# doris env\nfe_master_host=<your_fe_master_host>\nfe_master_port=<your_fe_master_query_port>\ndoris_username=<your_doris_username>\ndoris_password=<your_doris_password>\ndoris_odbc_name=<your_doris_odbc_driver_name>\ndoris_jdbc_catalog=<jdbc_catalog_name>\ndoris_jdbc_default_db=<jdbc_default_database>\ndoris_jdcb_driver_url=<jdcb_driver_url>\ndoris_jdbc_driver_class=<jdbc_driver_class>\n\n# mysql env\nmysql_host=<your_mysql_host>\nmysql_port=<your_mysql_port>\nmysql_username=<your_mysql_username>\nmysql_password=<your_mysql_password>\n")),(0,l.kt)("h3",{id:"mysql_tables"},"mysql_tables"),(0,l.kt)("p",null,"Fill in the mysql table here, in the form of ",(0,l.kt)("inlineCode",{parentName:"p"},"database.table"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"db1.table1\ndb1.table2\ndb2.table3\n")),(0,l.kt)("h3",{id:"doris_tables"},"doris_tables"),(0,l.kt)("p",null,"Fill in the doris olap table here, in the form of ",(0,l.kt)("inlineCode",{parentName:"p"},"database.table"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"doris_db.table1\ndoris_db.table2\ndoris_db.table3\n")),(0,l.kt)("h3",{id:"doris_external_tables"},"doris_external_tables"),(0,l.kt)("p",null,"Fill in the doris external table here, in the form of ",(0,l.kt)("inlineCode",{parentName:"p"},"database.table"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"doris_db.e_table1\ndoris_db.e_table2\ndoris_db.e_table3\n")),(0,l.kt)("h2",{id:"how-to-use"},"How to use"),(0,l.kt)("p",null,"bin/run.sh is the startup shell script and this is options for the script:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},'Usage: run.sh [option]\n    -e, --create-external-table: create doris external table\n    -o, --create-olap-table: create doris olap table\n    -i, --insert-data: insert data into doris olap table from doris external table\n    -d, --drop-external-table: drop doris external table\n    -a, --auto-external-table: create doris external table and auto check mysql schema change\n    --database: specify the database name to process all tables under the entire database, and separate multiple databases with ","\n    -t, --type: specify external table type, valid options: ODBC(default), JDBC\n    -h, --help: show usage\n')),(0,l.kt)("h3",{id:"1-create-doris-external-table"},"1. Create doris external table"),(0,l.kt)("p",null,"use like this:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"sh bin/run.sh --create-external-table\n")),(0,l.kt)("p",null,"or"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"sh bin/run.sh -e\n")),(0,l.kt)("p",null,"then doris odbc external table has been created, and the table creation statement will be generated in ",(0,l.kt)("inlineCode",{parentName:"p"},"result/mysql/e_mysql_to_doris.sql")," file."),(0,l.kt)("p",null,"If ",(0,l.kt)("inlineCode",{parentName:"p"},"--type")," option is specified as ",(0,l.kt)("inlineCode",{parentName:"p"},"JDBC"),", create jdbc catalog statement will be generated in ",(0,l.kt)("inlineCode",{parentName:"p"},"result/mysql/jdbc_catalog.sql")," file."),(0,l.kt)("h3",{id:"2-create-doris-olap-table"},"2. Create doris olap table"),(0,l.kt)("p",null,"use like this:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"sh bin/run.sh --create-olap-table\n")),(0,l.kt)("p",null,"or"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"sh bin/run.sh -o\n")),(0,l.kt)("p",null,"then doris odbc olap table has been created, and the table creation statement will be generated in ",(0,l.kt)("inlineCode",{parentName:"p"},"result/mysql/mysql_to_doris.sql")," file."),(0,l.kt)("h3",{id:"3-create-doris-olap-table-and-sync-data-from-odbc-external-table"},"3. Create doris olap table and sync data from odbc external table"),(0,l.kt)("p",null,"The premise is that you have created the external table, if not, please create it first."),(0,l.kt)("p",null,"use like this:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"sh bin/run.sh --create-olap-table --insert-data\n")),(0,l.kt)("p",null,"or"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"sh bin/run.sh -o -i\n")),(0,l.kt)("p",null,"then doris odbc olap table has been created, and the table creation statement will be generated in ",(0,l.kt)("inlineCode",{parentName:"p"},"result/mysql/mysql_to_doris.sql")," file, and the insert statement is generated in ",(0,l.kt)("inlineCode",{parentName:"p"},"result/mysql/sync_to_doris.sql")," file."),(0,l.kt)("h4",{id:"sync-result-check"},"Sync result check"),(0,l.kt)("p",null,"After the data is synchronized, the task of checking the synchronization results will be executed to compare the data volume of the olap table and mysql table, and the checking results will be saved in the ",(0,l.kt)("inlineCode",{parentName:"p"},"result/mysql/sync_check")," file."),(0,l.kt)("h4",{id:"drop-external-table"},"Drop external table"),(0,l.kt)("p",null,"If you want to drop odbc external table after data sync finished, add ",(0,l.kt)("inlineCode",{parentName:"p"},"--drop-external-table")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"-d")," option."),(0,l.kt)("p",null,"use like this:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"sh bin/run.sh --drop-external-table\n")),(0,l.kt)("p",null,"or"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"sh bin/run.sh -d\n")),(0,l.kt)("p",null,"this option is valid for ",(0,l.kt)("inlineCode",{parentName:"p"},"ODBC")," type."),(0,l.kt)("h3",{id:"4-create-doris-external-table-and-sync-schema-change-automatically"},"4. Create doris external table and sync schema change automatically"),(0,l.kt)("p",null,"use like this:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"sh bin/run.sh --auto-external-table\n")),(0,l.kt)("p",null,"or"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"sh bin/run.sh -a\n")),(0,l.kt)("p",null,"the program will run in the background, process id is saved in ",(0,l.kt)("inlineCode",{parentName:"p"},"e_auto.pid"),", and this option is valid for ",(0,l.kt)("inlineCode",{parentName:"p"},"ODBC")," type."),(0,l.kt)("h3",{id:"process-by-specifying-the-database"},"Process by specifying the database"),(0,l.kt)("p",null,"If you have a large number of tables and do not need to customize the doris table name, you can specify the database name to be processed through the ",(0,l.kt)("inlineCode",{parentName:"p"},"--databases")," option without manual configuration."),(0,l.kt)("p",null,"use like this:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"# single database\nsh bin/run.sh --database db1\n")),(0,l.kt)("p",null,"or"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"# multiple databases \nsh bin/run.sh --database db1,db2,db3\n")),(0,l.kt)("p",null,"With this option, the program will automatically obtain all the tables under the specified mysql database, and generate the configuration of ",(0,l.kt)("inlineCode",{parentName:"p"},"mysql_tables"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"doris_tables")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"doris_external_tables"),"."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Please note that this option needs to be used in conjunction with other options.")))}u.isMDXComponent=!0}}]);