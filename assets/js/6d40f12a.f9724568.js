"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([[71467],{3905:(t,e,n)=>{n.d(e,{Zo:()=>p,kt:()=>h});var i=n(67294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);e&&(i=i.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,i)}return n}function a(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function s(t,e){if(null==t)return{};var n,i,r=function(t,e){if(null==t)return{};var n,i,r={},o=Object.keys(t);for(i=0;i<o.length;i++)n=o[i],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(i=0;i<o.length;i++)n=o[i],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var l=i.createContext({}),u=function(t){var e=i.useContext(l),n=e;return t&&(n="function"==typeof t?t(e):a(a({},e),t)),n},p=function(t){var e=u(t.components);return i.createElement(l.Provider,{value:e},t.children)},c="mdxType",m={inlineCode:"code",wrapper:function(t){var e=t.children;return i.createElement(i.Fragment,{},e)}},f=i.forwardRef((function(t,e){var n=t.components,r=t.mdxType,o=t.originalType,l=t.parentName,p=s(t,["components","mdxType","originalType","parentName"]),c=u(n),f=r,h=c["".concat(l,".").concat(f)]||c[f]||m[f]||o;return n?i.createElement(h,a(a({ref:e},p),{},{components:n})):i.createElement(h,a({ref:e},p))}));function h(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var o=n.length,a=new Array(o);a[0]=f;var s={};for(var l in e)hasOwnProperty.call(e,l)&&(s[l]=e[l]);s.originalType=t,s[c]="string"==typeof t?t:r,a[1]=s;for(var u=2;u<o;u++)a[u]=n[u];return i.createElement.apply(null,a)}return i.createElement.apply(null,n)}f.displayName="MDXCreateElement"},40027:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>l,contentTitle:()=>a,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>u});var i=n(87462),r=(n(67294),n(3905));const o={title:"ST_Azimuth",language:"en"},a=void 0,s={unversionedId:"sql-manual/sql-functions/spatial-functions/st_azimuth",id:"version-2.0/sql-manual/sql-functions/spatial-functions/st_azimuth",title:"ST_Azimuth",description:"\x3c!--",source:"@site/versioned_docs/version-2.0/sql-manual/sql-functions/spatial-functions/st_azimuth.md",sourceDirName:"sql-manual/sql-functions/spatial-functions",slug:"/sql-manual/sql-functions/spatial-functions/st_azimuth",permalink:"/docs/sql-manual/sql-functions/spatial-functions/st_azimuth",draft:!1,tags:[],version:"2.0",frontMatter:{title:"ST_Azimuth",language:"en"},sidebar:"docs",previous:{title:"ST_Angle",permalink:"/docs/sql-manual/sql-functions/spatial-functions/st_angle"},next:{title:"ST_Angle_Sphere",permalink:"/docs/sql-manual/sql-functions/spatial-functions/st_angle_sphere"}},l={},u=[{value:"ST_Azimuth",id:"st_azimuth",level:2},{value:"Syntax",id:"syntax",level:3},{value:"description",id:"description",level:3},{value:"example",id:"example",level:3},{value:"keywords",id:"keywords",level:3}],p={toc:u},c="wrapper";function m(t){let{components:e,...n}=t;return(0,r.kt)(c,(0,i.Z)({},p,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"st_azimuth"},"ST_Azimuth"),(0,r.kt)("h3",{id:"syntax"},"Syntax"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"DOUBLE ST_Azimuth(GEOPOINT point1, GEOPOINT point2)")),(0,r.kt)("h3",{id:"description"},"description"),(0,r.kt)("p",null,"Enter two point, and returns the azimuth of the line segment formed by points 1 and 2. The azimuth is the angle in radians measured between the line from point 1 facing true North to the line segment from point 1 to point 2."),(0,r.kt)("p",null,"The positive angle is measured clockwise on the surface of a sphere. For example, the azimuth for a line segment:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Pointing North is 0"),(0,r.kt)("li",{parentName:"ul"},"Pointing East is PI/2"),(0,r.kt)("li",{parentName:"ul"},"Pointing South is PI"),(0,r.kt)("li",{parentName:"ul"},"Pointing West is 3PI/2")),(0,r.kt)("p",null,"ST_Azimuth has the following edge cases:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"If the two input points are the same, returns NULL."),(0,r.kt)("li",{parentName:"ul"},"If the two input points are exactly antipodal, returns NULL."),(0,r.kt)("li",{parentName:"ul"},"If either of the input geographies are not single points or are the empty geography, throws an error.")),(0,r.kt)("h3",{id:"example"},"example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"mysql> SELECT st_azimuth(ST_Point(1, 0),ST_Point(0, 0));\n+----------------------------------------------------+\n| st_azimuth(st_point(1.0, 0.0), st_point(0.0, 0.0)) |\n+----------------------------------------------------+\n|                                   4.71238898038469 |\n+----------------------------------------------------+\n1 row in set (0.03 sec)\n\nmysql> SELECT st_azimuth(ST_Point(0, 0),ST_Point(1, 0));\n+----------------------------------------------------+\n| st_azimuth(st_point(0.0, 0.0), st_point(1.0, 0.0)) |\n+----------------------------------------------------+\n|                                 1.5707963267948966 |\n+----------------------------------------------------+\n1 row in set (0.01 sec)\n\nmysql> SELECT st_azimuth(ST_Point(0, 0),ST_Point(0, 1));\n+----------------------------------------------------+\n| st_azimuth(st_point(0.0, 0.0), st_point(0.0, 1.0)) |\n+----------------------------------------------------+\n|                                                  0 |\n+----------------------------------------------------+\n1 row in set (0.01 sec)\n\nmysql> SELECT st_azimuth(ST_Point(0, 1),ST_Point(0, 1));\n+----------------------------------------------------+\n| st_azimuth(st_point(0.0, 1.0), st_point(0.0, 1.0)) |\n+----------------------------------------------------+\n|                                               NULL |\n+----------------------------------------------------+\n1 row in set (0.02 sec)\n\nmysql> SELECT st_azimuth(ST_Point(-30, 0),ST_Point(150, 0));\n+--------------------------------------------------------+\n| st_azimuth(st_point(-30.0, 0.0), st_point(150.0, 0.0)) |\n+--------------------------------------------------------+\n|                                                   NULL |\n+--------------------------------------------------------+\n1 row in set (0.02 sec)\n\n")),(0,r.kt)("h3",{id:"keywords"},"keywords"),(0,r.kt)("p",null,"ST_AZIMUTH,ST,AZIMUTH"))}m.isMDXComponent=!0}}]);